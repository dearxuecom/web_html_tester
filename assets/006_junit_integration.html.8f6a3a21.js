import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as o,a as n,b as c,d as s,e as i}from"./app.de8ea558.js";const l={},u=s("\u8FD9\u91CC\u7B80\u5355\u6F14\u793A\u4E00\u4E2A\u5BF9 "),r=n("code",null,"mockito",-1),k=s(" \u7684\u901A\u8FC7\u6269\u5C55\u7684\u6574\u5408\uFF0C\u4F8B\u5B50\u5728 "),d={href:"https://gitee.com/dearxuecom/better_test/tree/master/junit-5/src/test/java/com/dearxue/junit5/mockito",target:"_blank",rel:"noopener noreferrer"},v=s("junit5>mockito"),m=i(`<p>\u4F8B\u5B50\u4E2D\u6211\u4EEC\u5C06\u6F14\u793A\uFF0C \u5982\u679C\u901A\u8FC7 <code>mockito</code> \u5B9E\u73B0\u5BF9\u4E8E <code>@Mock</code> \u5BF9\u8C61\u81EA\u52A8\u7528 <code>mockito</code> \u6269\u5C55\u4F8B\u5B50\u3002</p><h2 id="\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u4F9D\u8D56" aria-hidden="true">#</a> \u4F9D\u8D56</h2><div class="language-grovvy ext-grovvy line-numbers-mode"><pre class="language-grovvy"><code>
testImplementation &#39;org.mockito:mockito-core:4.6.1&#39;
testImplementation &#39;org.mockito:mockito-junit-jupiter:4.6.1&#39;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528" aria-hidden="true">#</a> \u5E94\u7528</h2><p>\u57FA\u672C\u7684\u51E0\u4E2A\u670D\u52A1\u7C7B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u2514\u2500mockito
    \u2502  User.java
    \u2502
    \u251C\u2500repository
    \u2502      MailClient.java
    \u2502      SettingRepository.java
    \u2502      UserRepository.java
    \u2502
    \u2514\u2500service
            DefaultUserService.java
            Errors.java
            UserService.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token annotation punctuation">@ExtendWith</span><span class="token punctuation">(</span><span class="token class-name">MockitoExtension</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceUnitTest</span> <span class="token punctuation">{</span>

  <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
  <span class="token class-name">SettingRepository</span> settingRepository<span class="token punctuation">;</span>
  <span class="token annotation punctuation">@Mock</span> <span class="token class-name">UserRepository</span> userRepository<span class="token punctuation">;</span>
  <span class="token annotation punctuation">@Mock</span> <span class="token class-name">MailClient</span> mailClient<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

\`<span class="token annotation punctuation">@Mock</span>\` \u4E3A\u6211\u4EEC\u6D4B\u8BD5\u6CE8\u5165 mock \u5BF9\u8C61\uFF0C \u5728\u6BCF\u4E2A\u6D4B\u8BD5\u8FDB\u884C\u524D\uFF0C\u521D\u59CB\u5316 fixture<span class="token operator">:</span>

\`\`\`java

<span class="token annotation punctuation">@BeforeEach</span>
<span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Mock</span> <span class="token class-name">SettingRepository</span> settingRepository<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultUserService</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">,</span> settingRepository<span class="token punctuation">,</span> mailClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">lenient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>settingRepository<span class="token punctuation">.</span><span class="token function">getUserMinAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">when</span><span class="token punctuation">(</span>settingRepository<span class="token punctuation">.</span><span class="token function">getUserNameMinLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">lenient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">.</span><span class="token function">isUsernameAlreadyExists</span><span class="token punctuation">(</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenReturn</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>settingRepository <span class="token operator">=</span> settingRepository<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F <code>Mockito.lenient</code> Mockito \u5BF9\u5904\u7406\u672A\u4F7F\u7528\u7684 mock \u5BF9\u8C61\u4F1A\u629B\u51FA <code>UnsupportedStubbingException</code> \u6240\u4EE5\u8FD9\u91CC\u7528 lenient \u907F\u514D\u629B\u51FA\u8FD9\u6837\u7684\u5F02\u5E38\u3002</p><p>\u7136\u540E\u770B\u5177\u4F53\u6D4B\u5B9E\u6D4B\u7528\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">givenValidUser_whenSaveUser_thenSucceed</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Mock</span> <span class="token class-name">MailClient</span> mailClient<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Given</span>
    user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;Jerry&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">when</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">Answer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">int</span> sequence <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

              <span class="token annotation punctuation">@Override</span>
              <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">answer</span><span class="token punctuation">(</span><span class="token class-name">InvocationOnMock</span> invocation<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
                <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> invocation<span class="token punctuation">.</span><span class="token function">getArgument</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>sequence<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> user<span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultUserService</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">,</span> settingRepository<span class="token punctuation">,</span> mailClient<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// When</span>
    <span class="token class-name">User</span> insertedUser <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Then</span>
    <span class="token function">verify</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">verify</span><span class="token punctuation">(</span>mailClient<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendUserRegistrationMail</span><span class="token punctuation">(</span>insertedUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function b(g,f){const a=t("ExternalLinkIcon");return p(),o("div",null,[n("p",null,[u,r,k,n("a",d,[v,c(a)])]),m])}var _=e(l,[["render",b],["__file","006_junit_integration.html.vue"]]);export{_ as default};
